name: Release

permissions:
  contents: write

on: [push]

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            x86_64-apple-darwin,
            aarch64-apple-darwin,
            x86_64-pc-windows-msvc,
            x86_64-pc-windows-gnu,
            aarch64-unknown-linux-musl,
            aarch64-unknown-linux-gnu,
            x86_64-unknown-linux-musl,
            x86_64-unknown-linux-gnu,
            aarch64-linux-android,
          ]
        bin: [mktemp, dirname, whoami]
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            RUSTFLAGS: -C target-feature=+crt-static
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          # - target: arm64ec-pc-windows-msvc
          #   os: windows-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-linux-android
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.bin }}-${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "uutils/coreutils"
      - name: install libselinux1
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update -y
          sudo apt install libselinux1-dev -y
      - name: run cross-build
        uses: ahaoboy/cross-build@v1
        with:
          bin: ${{ matrix.bin }}
          package: uu_${{ matrix.bin }}
          # bin: coreutils,arch,b2sum,b3sum,base32,base64,basename,basenc,cat,cksum,comm,cp,csplit,cut,date,dd,df,dir,dircolors,dirname,du,echo,env,expand,expr,factor,false,fmt,fold,hashsum,head,hostname,join,link,ln,ls,md5sum,mkdir,mktemp,more,mv,nl,nproc,numfmt,od,paste,pr,printenv,printf,ptx,pwd,readlink,realpath,rm,rmdir,seq,sha1sum,sha224sum,sha256sum,sha3-224sum,sha3-256sum,sha3-384sum,sha3-512sum,sha384sum,sha3sum,sha512sum,shake128sum,shake256sum,shred,shuf,sleep,sort,split,sum,sync,tac,tail,tee,test,touch,tr,true,truncate,tsort,uname,unexpand,uniq,unlink,vdir,wc,whoami,yes
          # bin: coreutils,base32,base64,basename,basenc,cat,cksum,comm,cp,csplit,cut,date,dd,df,dir,dircolors,dirname,du,echo,env,expand,expr,factor,false,fmt,fold,hashsum,head,join,link,ln,ls,mkdir,mktemp,more,mv,nl,numfmt,od,paste,pr,printenv,printf,ptx,pwd,readlink,realpath,rm,rmdir,seq,shred,shuf,sleep,sort,split,sum,tac,tail,tee,test,touch,tr,true,truncate,tsort,unexpand,uniq,unlink,vdir,wc,yes

          # bin: coreutils
          # bin: mktemp
          # package: uu_mktemp
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}
          RUSTFLAGS: ${{ matrix.RUSTFLAGS }}
          tag: nightly
          # upload_artifact: false
          allowUpdates: true
          # features: "feat_Tier1"

      # - name: upload
      #   run: |
      #     ls -lh target/${{ matrix.target }}/release/
      #     cargo build --workspace --release --target ${{ matrix.target }}
      #     ls -lh target/${{ matrix.target }}/release/
